
static int current_token;
static char current_char;
static int current_state=START_STATE;

static char current_string[MAX_TOKEN_SIZE];
static int string_pointer;

static inline void pushChar(char c){
    if(string_pointer>=MAX_TOKEN_SIZE){
        printf("token too long");
        exit(0);
    }
    current_string[string_pointer++]=c;
}

static inline void clearString(){
    string_pointer=0;
}

static inline int nextState(char c){
    if(c==EOF) return ERROR_STATE;
    return status[current_state][c];
}
static inline void nextChar(){
    current_char=getchar();
}
static inline char getChar(){
    return current_char;
}
static inline int isFinalState(int state){
    return tokens[state]>=END_TOKEN;
}

static inline int isErrorState(int state){
    return state==ERROR_STATE;
}
static inline int isRecognizedToken(int token){
    return token>=END_TOKEN;
}
static inline int isUnRecognizedToken(int token){
    return token==UNRECOGNIZED_TOKEN;
}
int isEOF(){
    return current_char==EOF;
}

int isWhite(){
    return current_char==5;
}

void nextToken(){
    int state;
    int lastToken=tokens[current_state];
    int token;

    clearString();

    if(getChar()==EOF){
        pushChar('\0');
        return;
    }
    while(1){
        state=nextState(getChar());
        if(isErrorState(state)){
            if(!isRecognizedToken(lastToken)){
                pushChar(getChar());
                pushChar('\0');
                printf("%s:unrecognized\n",getTokenString());
                exit(0);
            }
            pushChar('\0');
            current_token=lastToken;
            current_state=START_STATE;
            break;
        }

        pushChar(getChar());
        nextChar();
        lastToken=tokens[state];
        current_state=state;
    }
}

void startAnalyze(){
    nextChar();
    nextToken();
}

const char* getTokenString(){
    return current_string;
}

int getToken(){
    return current_token;
}

}